// 1. Create a database called 'my_first_db'.
	use my_first_db

// 2.Create students collection.
	db.createCollection("students")

// 3. Each document you insert into this collection should have the following format: {name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}}
// 4. Create 5 students with the appropriate info.
	db.students.insert({name: "Phaenorah", home_state: "AR", lucky_number: 7, birthday: {month: 10, day:19, year:1977}})
	db.students.insert({name: "Halle", home_state: "AR", lucky_number: 10, birthday: {month: 03, day:25, year:2008}})
	db.students.insert({name: "Irene", home_state: "TN", lucky_number: 5, birthday: {month: 03, day:10, year:1978}})
    db.students.insert({name: "Lillian", home_state: "TN", lucky_number: 1, birthday: {month: 08, day:17, year:1976}})
	db.students.insert({name: "William", home_state: "NY", lucky_number: 19, birthday: {month: 06, day:02, year:1980}})

// 5. Get all students.
	db.students.find().pretty()

// 6. Retrieve all students who are from Arkansas.
	db.students.find({home_state: "AR"})

// 7. Get all students whose lucky number is:
// 7.1 Greater than 3
	db.students.find({lucky_number:{$gt:3}})

// 7.2 Less than or equal to 10
	db.students.find({lucky_number:{$lte:10}})

// 7.3 Between 1 and 9, inclusive
	db.students.find({$and:[{lucky_number:{$lte:9}}, {lucky_number:{$gte:1}}]})

// 8. Add a field in each student collection called 'interests' that is an ARRAY.  
//It should contain the following entries: 'coding', 'brunch', 'MongoDB'. Do this in ONE operation.
	db.students.update({},{$set: {"interests":['coding', 'brunch', 'MongoDB']}},{multi:true})

// 9. Add some unique interests for each particular students into each of their interest arrays.
	db.students.update({name: "Phaenorah"},{$push: {interests:{$each:['music', 'wine']}}})
	db.students.update({name: "Halle"},{$push: {interests:{$each:['tiktok', 'being the GOAT']}}})
	db.students.update({name: "Irene"},{$push: {interests:{$each:['Nirvana', 'playing guitar']}}})
	db.students.update({name: "Lillian"},{$push: {interests:{$each:['travel', 'reading']}}})
    db.students.update({name: "William"},{$push: {interests:{$each:['wine', 'yoga']}}})

// 10. Add the interest 'taxes' into someone's interest array.
	db.students.update({name: "William"},{$push: {interests: "taxes"}})

// 11. Remove the 'taxes' interest you just added.
	db.students.update({name: "William"},{$pull: {interests: "taxes"}})

// 12. Remove all students who are from TN.
	db.students.remove({home_state: "TN"})

// 13. Remove a user by name. 
	db.students.remove({name:"Halle"})

// 14. Remove a student whose lucky number is greater than 5 (JUST ONE)
	db.students.remove({lucky_number: {$gt:5}}, {justOne:true})

// 15. Add a field in each student collection called 'number_of_belts' and set it to 0.
	db.students.update({},{$set: {"number_of_belts":0}},{multi:true})

// 16. Increment this field by 1 for all students in Arkansas.
	db.students.update({home_state: "AR"},{$inc: {number_of_belts: 1}},{multi:true})

// 17. Rename the 'number_of_belts' field to 'belts_earned'
	db.students.update({}, {$rename: {"number_of_belts":"belts_earned"}})

// 18. Remove the 'lucky_number' field.
	db.students.update({}, {$unset:{lucky_number:""}},{multi:true})
    
// 19. Add a 'updated_on' field, and set the value as the current date.
	db.students.update({}, {$currentDate:{updated_on:true}},{multi:true})
	 